//#include <MFRC522.h>
//#include <MFRC522Extended.h>
//#include <deprecated.h>
//#include <require_cpp11.h>


#include <Timer.h>
#include <SPI.h>
#include <MFRC522.h>                //含入程式庫”MFRC522.h”



#define SS_PIN 10                   //RC522 NSS 連接 Arduino pin 10
#define RST_PIN 9                   //RC522 RST 連接 Arduino pin 9
#define LED_1 2                   
#define LED_2 3
#define LED_3 4
#define LED_4 5
#define LED_5 6
#define LED_6 7
#define LED_7 8


#define Card1 "63 CB 54 18"
#define Card2 "F3 52 91 18"
#define Card3 "E3 9A 5B 18"
#define Card4 "73 FC 5A 18"
#define Card5 "13 19 47 18"
#define Card6 "34 3B 5A 50"
#define Card7 "13 98 4D A9"

                   //蜂鳴器正極 連接 Arduino pin 2
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.


Timer t; //計時器
int count=0; //秒數
bool timer ;
int countdownT=2;



void setup() 
{
  Serial.begin(9600);  
                // Initiate a serial communication
  SPI.begin();                       // Initiate  SPI bus
  mfrc522.PCD_Init();                // Initiate MFRC522
  
  pinMode(LED_1, OUTPUT);
  pinMode(LED_2, OUTPUT);
  pinMode(LED_3, OUTPUT);
  pinMode(LED_4, OUTPUT);
  pinMode(LED_5, OUTPUT);
  pinMode(LED_6, OUTPUT);
  pinMode(LED_7, OUTPUT);
  timer=false;
  
  t.every(1000,WriteToSerial);  //啟動器時器

  Serial.println("Put your card to reader....");
  while (!Serial){
  offlight();
  };

}



void loop() 
{
  while (!Serial){
  offlight();
  };
  if(timer)
  {
    t.update();
    
  }
  
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
       return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message : ");
  content.toUpperCase();
  

  //---------------le1
  if (content.substring(1) == Card1||mfrc522.PICC_ReadCardSerial())                     //在此鍵入讓房門打開的 IC 卡片 ID 碼
  {
    count=0;
    timer=true;
    Serial.println("Authorized access"); 
    Serial.println("led1");                          
    Serial.println();
    ledlight1();
     
    
    
    
  }


//---------------le2
  if (content.substring(1) == Card2||mfrc522.PICC_ReadCardSerial())                     //在此鍵入讓房門打開的 IC 卡片 ID 碼
  {
    count=0;
    timer=true;
    Serial.println("Authorized access"); 
    Serial.println("led2");                          
    Serial.println();
    
    ledlight2();
  } 
 //---------------le3
  if (content.substring(1) == Card3||mfrc522.PICC_ReadCardSerial())                   
  {
    count=0;
    timer=true;
    Serial.println("Authorized access"); 
    Serial.println("led3");                         
    Serial.println();
    ledlight3();
    
  } 
  //---------------le4
  if (content.substring(1) == Card4||mfrc522.PICC_ReadCardSerial())                     
  {
    count=0;
    timer=true;
    Serial.println("Authorized access"); 
    Serial.println("led5");                          
    Serial.println();
    ledlight5();
          
  } 
  //---------------le5
  if (content.substring(1) == Card5)                    
  { 
    count=0;
    timer=true;
    Serial.println("Authorized access"||mfrc522.PICC_ReadCardSerial()); 
    Serial.println("led4");                         
    Serial.println();
    ledlight4();

  } 

  //------------led6
    if (content.substring(1) == Card6||mfrc522.PICC_ReadCardSerial())                     //在此鍵入讓房門打開的 IC 卡片 ID 碼
  {
    count=0;
    timer=true;
    Serial.println("Authorized access"); 
    Serial.println("led1");                          
    Serial.println();
    ledlight6();
         
    
  }
  //-------------led7
   if (content.substring(1) == Card7||mfrc522.PICC_ReadCardSerial())                     //在此鍵入讓房門打開的 IC 卡片 ID 碼
  {
    count=0;
    timer=true;
    Serial.println("Authorized access"); 
    Serial.println("led1");                          
    Serial.println();
    ledlight7();
         
    
  }

}

void WriteToSerial()
  {
    Serial.println(count);
    count++;
    if(count>countdownT)
    {
    offlight();
    delay(3000);
    timer=false;
    }
  }


void offlight()
{
   
    digitalWrite(LED_1, LOW);
    digitalWrite(LED_2, LOW);
    digitalWrite(LED_3, LOW);
    digitalWrite(LED_4, LOW);
    digitalWrite(LED_5, LOW);
    digitalWrite(LED_6, LOW);
    digitalWrite(LED_7, LOW);
  
}
void ledlight1()
{
    digitalWrite(LED_1, HIGH);
    digitalWrite(LED_2, HIGH);
    digitalWrite(LED_3, HIGH);
    digitalWrite(LED_4, HIGH);
    digitalWrite(LED_5, HIGH);
    digitalWrite(LED_6, HIGH);
    digitalWrite(LED_7, HIGH);
}
void ledlight2()
{
    digitalWrite(LED_1, LOW);
    digitalWrite(LED_2, HIGH);
    digitalWrite(LED_3, HIGH);
    digitalWrite(LED_4, HIGH);
    digitalWrite(LED_5, HIGH);
    digitalWrite(LED_6, HIGH);
    digitalWrite(LED_7, HIGH);
}
void ledlight3()
{
    digitalWrite(LED_1, HIGH);
    digitalWrite(LED_2, LOW);
    digitalWrite(LED_3, LOW);
    digitalWrite(LED_4, HIGH);
    digitalWrite(LED_5, LOW);
    digitalWrite(LED_6, LOW);
    digitalWrite(LED_7, HIGH);
}
void ledlight4()
{
    digitalWrite(LED_1, LOW);
    digitalWrite(LED_2, HIGH);
    digitalWrite(LED_3, HIGH);
    digitalWrite(LED_4, LOW);
    digitalWrite(LED_5, HIGH);
    digitalWrite(LED_6, HIGH);
    digitalWrite(LED_7, LOW);
}
void ledlight5()
{
    digitalWrite(LED_1, LOW);
    digitalWrite(LED_2, HIGH);
    digitalWrite(LED_3, HIGH);
    digitalWrite(LED_4, LOW);
    digitalWrite(LED_5, LOW);
    digitalWrite(LED_6, LOW);
    digitalWrite(LED_7, HIGH);
}
void ledlight6()
{
    digitalWrite(LED_1, LOW);
    digitalWrite(LED_2, LOW);
    digitalWrite(LED_3, LOW);
    digitalWrite(LED_4, LOW);
    digitalWrite(LED_5, HIGH);
    digitalWrite(LED_6, LOW);
    digitalWrite(LED_7, LOW);
}
void ledlight7()
{
    digitalWrite(LED_1, LOW);
    digitalWrite(LED_2, LOW);
    digitalWrite(LED_3, HIGH);
    digitalWrite(LED_4, LOW);
    digitalWrite(LED_5, LOW);
    digitalWrite(LED_6, HIGH);
    digitalWrite(LED_7, LOW);
}
